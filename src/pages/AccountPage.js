import React, { useEffect, useState } from 'react';
import API from '../api/axios';
import { useNavigate } from 'react-router-dom';
import './AccountPage.css';

const AccountPage = ({ authToken, setAuthToken }) => {
  const [user, setUser] = useState(null);
  const [reviews, setReviews] = useState([]);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    if (!authToken) {
      navigate('/login');
      return;
    }

    Promise.all([
      API.get('me/'),         
      API.get('reviews/')     
    ])
      .then(([userRes, reviewRes]) => {
        const currentUser = userRes.data;
        setUser(currentUser);

        const userReviews = reviewRes.data.filter(
          review => review.id === currentUser.id
        );

        setReviews(userReviews);
      })
      .catch(err => {
        console.error(err);
        setUser(null);
      })
      .finally(() => setLoading(false));
  }, [authToken, navigate]);

  const handleLogout = () => {
    setAuthToken(null); 
    navigate('/'); 
  };

  const handleDelete = (id) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤?')) {
      API.delete(`reviews/${id}/`)
        .then(() => {
          setReviews(prev => prev.filter(r => r.id !== id));
        })
        .catch(() => alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞'));
    }
  };

  const handleEdit = (id) => {
    navigate(`/edit-review/${id}`);
  };

  const handleNewReview = () => {
    navigate('/submit-review');
  };

  if (loading) return <p className="account-container">–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div className="account-container">
      <h2 className="account-title">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>

      {user ? (
        <div className="user-info">
          <p><strong>–õ–æ–≥–∏–Ω:</strong> {user.username}</p>
          <p><strong>Email:</strong> {user.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
        </div>
      ) : (
        <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</p>
      )}

      <button onClick={handleNewReview} className="button new-review-button">
        üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
      </button>

      <h3 className="review-section-title">–í–∞—à–∏ –æ—Ç–∑—ã–≤—ã</h3>
      {reviews.length === 0 ? (
        <p>–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤.</p>
      ) : (
        reviews.map(review => (
          <div key={review.id} className="review-card">
            <p><strong>–§–ò–û:</strong> {review.name}</p>
            <p><strong>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:</strong> {review.graduation_year}</p>
            <p><strong>–û—Ç–∑—ã–≤:</strong> ¬´{review.text}¬ª</p>
            {review.photo && (
              <img
                src={review.photo}
                alt="–§–æ—Ç–æ –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞"
                className="review-photo"
              />
            )}
            <div className="review-actions">
              <button onClick={() => handleEdit(review.id)} className="button edit-button">
                ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </button>
              <button onClick={() => handleDelete(review.id)} className="button delete-button">
                üóë –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          </div>
        ))
      )}

      <div className="logout-container">
        <button onClick={handleLogout} className="button logout-button">
          –í—ã–π—Ç–∏
        </button>
      </div>
    </div>
  );
};

export default AccountPage;
